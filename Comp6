import pandas as pd
import glob
import re

def normalize_name(name):
    """Normalize column/parameter names by replacing spaces, dashes, and slashes with underscores."""
    return re.sub(r'[\s\-\/]', '_', name).lower()

def extract_csv_parameters(csv_folder):
    """Extract parameter names from structured CSV files, handling sections, missing values, and blank lines"""
    all_parameters = set()
    csv_files = glob.glob(f"{csv_folder}/*.csv")

    for file in csv_files:
        with open(file, 'r') as f:
            lines = [line.strip() for line in f if line.strip()]  # remove blank lines

        i = 0
        while i < len(lines):
            if lines[i].startswith('@'):
                i += 1
                if i < len(lines) and not lines[i].startswith('@'):
                    params_line = lines[i]
                    params = [normalize_name(p.strip()) for p in params_line.split(',') if p.strip()]
                    all_parameters.update(params)
                    i += 1
                while i < len(lines) and not lines[i].startswith('@'):
                    i += 1
            else:
                i += 1
    return all_parameters

def compare_with_reference_csv(csv_folder, reference_csv_file):
    # Extract parameters from structured CSVs
    csv_params = extract_csv_parameters(csv_folder)

    # Read column headers from reference CSV file
    ref_df = pd.read_csv(reference_csv_file, nrows=0)  # just the header
    ref_columns = {normalize_name(col) for col in ref_df.columns}

    matching = csv_params.intersection(ref_columns)
    csv_only = csv_params.difference(ref_columns)
    ref_only = ref_columns.difference(csv_params)

    # Format and print table
    max_len = max(len(matching), len(csv_only), len(ref_only))
    table_data = {
        'Matching Parameters': list(sorted(matching)) + [''] * (max_len - len(matching)),
        'Only in CSV Folder': list(sorted(csv_only)) + [''] * (max_len - len(csv_only)),
        'Only in Reference CSV': list(sorted(ref_only)) + [''] * (max_len - len(ref_only))
    }

    df = pd.DataFrame(table_data)
    print("\n=== Parameter Comparison Table ===")
    print(df.to_string(index=False))

    return {
        'matching_parameters': sorted(matching),
        'csv_only_parameters': sorted(csv_only),
        'reference_csv_only_columns': sorted(ref_only)
    }

# Example usage
results = compare_with_reference_csv('path/to/csv/folder', 'path/to/reference.csv')
