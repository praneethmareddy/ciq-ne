import pandas as pd
import glob

def extract_csv_parameters(csv_folder):
    """Extract all parameter names from CSV files in the given folder, considering multiple value rows"""
    all_parameters = set()
    csv_files = glob.glob(f"{csv_folder}/*.csv")
    
    for file in csv_files:
        with open(file, 'r') as f:
            lines = f.readlines()
            i = 0
            while i < len(lines):
                if lines[i].startswith('@'):
                    # Section found
                    if i + 1 < len(lines):
                        # Get parameters
                        params = lines[i+1].strip().split(',')
                        all_parameters.update(params)
                        i += 2  # Move to first values line
                        # Loop through value rows until next section or EOF
                        while i < len(lines) and not lines[i].startswith('@'):
                            i += 1
                    else:
                        i += 1
                else:
                    i += 1
    return all_parameters

def compare_with_xlsx(csv_folder, xlsx_file):
    # Extract parameters from CSV
    csv_params = extract_csv_parameters(csv_folder)
    
    # Extract columns from XLSX
    xlsx_df = pd.read_excel(xlsx_file)
    xlsx_columns = set(xlsx_df.columns)
    
    # Compare
    matching = csv_params.intersection(xlsx_columns)
    csv_only = csv_params.difference(xlsx_columns)
    xlsx_only = xlsx_columns.difference(csv_params)
    
    # Print details
    print("=== Parameters in CSV files ===")
    print(sorted(csv_params))
    
    print("\n=== Columns in XLSX file ===")
    print(sorted(xlsx_columns))
    
    print("\n=== Matching Parameters ===")
    print(sorted(matching))
    
    print("\n=== Parameters only in CSV files ===")
    print(sorted(csv_only))
    
    print("\n=== Columns only in XLSX file ===")
    print(sorted(xlsx_only))

    return {
        'matching_parameters': sorted(matching),
        'csv_only_parameters': sorted(csv_only),
        'xlsx_only_columns': sorted(xlsx_only)
    }

# Usage example:
results = compare_with_xlsx('path/to/csv/folder', 'path/to/file.xlsx')
