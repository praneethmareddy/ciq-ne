import pandas as pd
import glob

def extract_csv_parameters(csv_folder):
    """Extract parameter names from CSV files, handling multiple value rows and blank lines"""
    all_parameters = set()
    csv_files = glob.glob(f"{csv_folder}/*.csv")

    for file in csv_files:
        with open(file, 'r') as f:
            lines = [line.strip() for line in f if line.strip()]  # remove blank lines

        i = 0
        while i < len(lines):
            if lines[i].startswith('@'):
                # Found a section
                i += 1
                # Skip to next non-empty line which is parameter header
                if i < len(lines):
                    params_line = lines[i]
                    params = [p.strip() for p in params_line.split(',') if p.strip()]
                    all_parameters.update(params)
                i += 1  # Skip to value rows or next section
                # Continue to skip value rows until next @section or EOF
                while i < len(lines) and not lines[i].startswith('@'):
                    i += 1
            else:
                i += 1  # Skip anything unexpected
    return all_parameters

def compare_with_xlsx(csv_folder, xlsx_file):
    csv_params = extract_csv_parameters(csv_folder)
    xlsx_df = pd.read_excel(xlsx_file)
    xlsx_columns = set(xlsx_df.columns)

    matching = csv_params.intersection(xlsx_columns)
    csv_only = csv_params.difference(xlsx_columns)
    xlsx_only = xlsx_columns.difference(csv_params)

    print("=== Parameters in CSV files ===")
    print(sorted(csv_params))

    print("\n=== Columns in XLSX file ===")
    print(sorted(xlsx_columns))

    print("\n=== Matching Parameters ===")
    print(sorted(matching))

    print("\n=== Parameters only in CSV files ===")
    print(sorted(csv_only))

    print("\n=== Columns only in XLSX file ===")
    print(sorted(xlsx_only))

    return {
        'matching_parameters': sorted(matching),
        'csv_only_parameters': sorted(csv_only),
        'xlsx_only_columns': sorted(xlsx_only)
    }

# Example usage
results = compare_with_xlsx('path/to/csv/folder', 'path/to/file.xlsx')
